						Ruby_on_Rails

1. Requirements :

ruby
the rails framework
a web server (node)
a database system (psql)

2. Installing rails 
$ sudo gem install rails

3. checking version
$ rails --version

4.Generators helps in making your development life easier by automating tasks and creating everything to start a new project.

stating a basic project (but keep in mind that don't use this command in a already .git repository because this command creates a git repository.)
$ rails new blog

5 . $ cd blog

6. Starting the rails server 

gr00t@Gr00t:~/Desktop/ruby_rails/blog$ bin/rails server

Error:
Webpacker configuration file not found /home/gr00t/Desktop/ruby_rails/blog/config/webpacker.yml. Please run rails webpacker:install Error: No such file or directory @ rb_sysopen - /home/gr00t/Desktop/ruby_rails/blog/config/webpacker.yml (RuntimeError)

Tried running rails webpacker:install but didn't worked as it says install yarn, but i already had yarn 0.32+git version which wasn't the suited one had to upgrade itbetween yarn v1 or yarn v2.

so i tried the command :
$ which yarn
/usr/bin/yarn

it may be different in your case "Check it for yourself"

then i removed the directory from the system using 

$ sudo rm -rf /usr/bin/yarn (Carefully: as it can mess up your debian if command went wrong)

then install npm using 

$ sudo apt install npm

and then install yarn using npm

$ npm install -g yarn

and then run the command 

$ rails webpacker:install

and Chillzzz you can run your rails server using the command

gr00t@Gr00t:~/Desktop/ruby_rails/blog$ bin/rails server
=> Booting Puma
=> Rails 6.1.2.1 application starting in development 
=> Run `bin/rails server --help` for more startup options
Puma starting in single mode...
* Puma version: 5.2.1 (ruby 2.7.2-p137) ("Fettisdagsbulle")
*  Min threads: 5
*  Max threads: 5
*  Environment: development
*          PID: 46795
* Listening on http://127.0.0.1:3000
* Listening on http://[::1]:3000
Use Ctrl-C to stop
Started GET "/" for ::1 at 2021-02-17 17:07:17 +0530
   (1.6ms)  SELECT sqlite_version(*)
Processing by Rails::WelcomeController#index as HTML
  Rendering /var/lib/gems/2.7.0/gems/railties-6.1.2.1/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /var/lib/gems/2.7.0/gems/railties-6.1.2.1/lib/rails/templates/rails/welcome/index.html.erb (Duration: 22.3ms | Allocations: 437)
Completed 200 OK in 86ms (Views: 29.3ms | ActiveRecord: 0.0ms | Allocations: 3565)

!!!Remember : Open your browser and in the URI TYPE "localhost:3000" . This should open the rails server page

7. "Hello World!"

create a route first it will send request to controller then the controller fetch the data from the model and pass the data to the view for presentation

To create a route edit the config/routes.rb file 
at the top of the Rails.application.routes.draw block:

Add this line 

get "/articles", to: "articles#index"

and now on the command line use this command to make a controller 

as We already defined the route, so use the param --skip-routes : 

$ bin/rails generate controller Articles index --skip-routes  

8. Creating a new project with command :
	By default the database is sqlite3

	gr00t@Gr00t:~/Desktop/ruby_rails$ rails new company_xyz -d postgresql

	Error:
	In Gemfile:
	  pg
		 run  bundle binstubs bundler
	Could not find gem 'pg (~> 1.1)' in any of the gem sources listed in your Gemfile.
	       rails  webpacker:install
	Could not find gem 'pg (~> 1.1)' in any of the gem sources listed in your Gemfile.
	Run `bundle install` to install missing gems.


	gr00t@Gr00t:~/Desktop/ruby_rails$ bundle install pg
	ERROR: "bundle install" was called with arguments ["pg"]
	Usage: "bundle install [OPTIONS]"                                                                                                                                     
	gr00t@Gr00t:~/Desktop/ruby_rails$ bundle install --help
	gr00t@Gr00t:~/Desktop/ruby_rails$ bundle install pg -v '1.2.3'
	Unknown switches "-v"
	gr00t@Gr00t:~/Desktop/ruby_rails$ gem install pg -v '1.2.3'
	ERROR:  While executing gem ... (Gem::FilePermissionError)
	    You don't have write permissions for the /var/lib/gems/2.7.0 directory.
	gr00t@Gr00t:~/Desktop/ruby_rails$ sudo gem install pg -v '1.2.3'
	Building native extensions. This could take a while...
	ERROR:  Error installing pg:
		ERROR: Failed to build gem native extension.

	    current directory: /var/lib/gems/2.7.0/gems/pg-1.2.3/ext
	/usr/bin/ruby2.7 -I /usr/lib/ruby/vendor_ruby -r ./siteconf20210218-50341-akfe0s.rb extconf.rb
	checking for pg_config... yes
	Using config values from /usr/bin/pg_config
	checking for libpq-fe.h... no
	Can't find the 'libpq-fe.h header
	*** extconf.rb failed ***
	Could not create Makefile due to some reason, probably lack of necessary
	libraries and/or headers.  Check the mkmf.log file for more details.  You may
	need configuration options.

	Provided configuration options:
		--with-opt-dir
		--without-opt-dir
		--with-opt-include
		--without-opt-include=${opt-dir}/include
		--with-opt-lib
		--without-opt-lib=${opt-dir}/lib
		--with-make-prog
		--without-make-prog
		--srcdir=.
		--curdir
		--ruby=/usr/bin/$(RUBY_BASE_NAME)2.7
		--with-pg
		--without-pg
		--enable-windows-cross
		--disable-windows-cross
		--with-pg-config
		--without-pg-config
		--with-pg_config
		--without-pg_config
		--with-pg-dir
		--without-pg-dir
		--with-pg-include
		--without-pg-include=${pg-dir}/include
		--with-pg-lib
		--without-pg-lib=${pg-dir}/lib

	To see why this extension failed to compile, please check the mkmf.log which can be found here:

	  /var/lib/gems/2.7.0/extensions/x86_64-linux/2.7.0/pg-1.2.3/mkmf.log

	extconf failed, exit code 1

	Gem files will remain installed in /var/lib/gems/2.7.0/gems/pg-1.2.3 for inspection.
	Results logged to /var/lib/gems/2.7.0/extensions/x86_64-linux/2.7.0/pg-1.2.3/gem_make.out

	Solution:
	You need to install libpq-dev first

	gr00t@Gr00t:~/Desktop/ruby_rails$ sudo apt install libpq-dev 

	gr00t@Gr00t:~/Desktop/ruby_rails$ sudo gem install pg
	Building native extensions. This could take a while...
	Successfully installed pg-1.2.3
	Parsing documentation for pg-1.2.3
	Installing ri documentation for pg-1.2.3
	Done installing documentation for pg after 1 seconds
	1 gem installed

9. Starting the rails server in the current project directory: 
	
	Database(Postgresql) connection Error:

	gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ bin/rails server
	=> Booting Puma
	=> Rails 6.1.3 application starting in development 
	=> Run `bin/rails server --help` for more startup options
	Puma starting in single mode...
	* Puma version: 5.2.1 (ruby 2.7.2-p137) ("Fettisdagsbulle")
	*  Min threads: 5
	*  Max threads: 5
	*  Environment: development
	*          PID: 51127
	* Listening on http://127.0.0.1:3000
	* Listening on http://[::1]:3000
	Use Ctrl-C to stop
	Started GET "/" for ::1 at 2021-02-18 10:38:41 +0530
	  
	ActiveRecord::ConnectionNotEstablished (could not connect to server: No such file or directory
		Is the server running locally and accepting
		connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?
	):

	Solution:
	Under the default section, find the line that says “pool: 5” and add the following lines under it. It should look something like this (replace the highlighted 		parts with your PostgreSQL user and password):
	config/database.yml excerpt

	host: localhost
	username: pguser
	password: pguser_password
	
	Creating User in PSQL refer to thead:
	https://stackoverflow.com/questions/2172569/how-do-i-login-and-authenticate-to-postgresql-after-a-fresh-install

	There are two methods you can use. Both require creating a user and a database.

	By default psql connects to the database with the same name as the user. So there is a convention to make that the "user's database". And there is no reason	 	to break that convention if your user only needs one database. We'll be using mydatabase as the example database name.

    Using createuser and createdb, we can be explicit about the database name,

    $ sudo -u postgres createuser -s $USER
    $ createdb mydatabase
    $ psql -d mydatabase

    You should probably be omitting that entirely and letting all the commands default to the user's name instead.

    $ sudo -u postgres createuser -s $USER
    $ createdb
    $ psql

10. Creating a route and controller in config/routes.rb

	Rails.application.routes.draw do
	  # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html
	  get "/employee", to: "employee#index"
	end

	and run a command for creating the controller using terminal in the current directory

	gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ bin/rails generate controller Employee index --skip-routes

11. Creating database for the application

	gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rake db:create 
	Database 'company_xyz_development' already exists
	Created database 'company_xyz_test'
12. 
