						Ruby_on_Rails

1. Requirements :

ruby
the rails framework
a web server (node)
a database system (psql)

2. Installing rails 
$ sudo gem install rails

3. checking version
$ rails --version

4.Generators helps in making your development life easier by automating tasks and creating everything to start a new project.

stating a basic project (but keep in mind that don't use this command in a already .git repository because this command creates a git repository.)
$ rails new blog

5 . $ cd blog

6. Starting the rails server 

gr00t@Gr00t:~/Desktop/ruby_rails/blog$ bin/rails server

Error:
Webpacker configuration file not found /home/gr00t/Desktop/ruby_rails/blog/config/webpacker.yml. Please run rails webpacker:install Error: No such file or directory @ rb_sysopen - /home/gr00t/Desktop/ruby_rails/blog/config/webpacker.yml (RuntimeError)

Tried running rails webpacker:install but didn't worked as it says install yarn, but i already had yarn 0.32+git version which wasn't the suited one had to upgrade itbetween yarn v1 or yarn v2.

so i tried the command :
$ which yarn
/usr/bin/yarn

it may be different in your case "Check it for yourself"

then i removed the directory from the system using 

$ sudo rm -rf /usr/bin/yarn (Carefully: as it can mess up your debian if command went wrong)

then install npm using 

$ sudo apt install npm

and then install yarn using npm

$ npm install -g yarn

and then run the command 

$ rails webpacker:install

and Chillzzz you can run your rails server using the command

gr00t@Gr00t:~/Desktop/ruby_rails/blog$ bin/rails server
=> Booting Puma
=> Rails 6.1.2.1 application starting in development 
=> Run `bin/rails server --help` for more startup options
Puma starting in single mode...
* Puma version: 5.2.1 (ruby 2.7.2-p137) ("Fettisdagsbulle")
*  Min threads: 5
*  Max threads: 5
*  Environment: development
*          PID: 46795
* Listening on http://127.0.0.1:3000
* Listening on http://[::1]:3000
Use Ctrl-C to stop
Started GET "/" for ::1 at 2021-02-17 17:07:17 +0530
   (1.6ms)  SELECT sqlite_version(*)
Processing by Rails::WelcomeController#index as HTML
  Rendering /var/lib/gems/2.7.0/gems/railties-6.1.2.1/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /var/lib/gems/2.7.0/gems/railties-6.1.2.1/lib/rails/templates/rails/welcome/index.html.erb (Duration: 22.3ms | Allocations: 437)
Completed 200 OK in 86ms (Views: 29.3ms | ActiveRecord: 0.0ms | Allocations: 3565)

!!!Remember : Open your browser and in the URI TYPE "localhost:3000" . This should open the rails server page

7. "Hello World!"

create a route first it will send request to controller then the controller fetch the data from the model and pass the data to the view for presentation

To create a route edit the config/routes.rb file 
at the top of the Rails.application.routes.draw block:

Add this line 

get "/articles", to: "articles#index"

and now on the command line use this command to make a controller 

as We already defined the route, so use the param --skip-routes : 

$ bin/rails generate controller Articles index --skip-routes  

8. Creating a new project with command :
	By default the database is sqlite3

	gr00t@Gr00t:~/Desktop/ruby_rails$ rails new company_xyz -d postgresql

	Error:
	In Gemfile:
	  pg
		 run  bundle binstubs bundler
	Could not find gem 'pg (~> 1.1)' in any of the gem sources listed in your Gemfile.
	       rails  webpacker:install
	Could not find gem 'pg (~> 1.1)' in any of the gem sources listed in your Gemfile.
	Run `bundle install` to install missing gems.


	gr00t@Gr00t:~/Desktop/ruby_rails$ bundle install pg
	ERROR: "bundle install" was called with arguments ["pg"]
	Usage: "bundle install [OPTIONS]"                                                                                                                                     
	gr00t@Gr00t:~/Desktop/ruby_rails$ bundle install --help
	gr00t@Gr00t:~/Desktop/ruby_rails$ bundle install pg -v '1.2.3'
	Unknown switches "-v"
	gr00t@Gr00t:~/Desktop/ruby_rails$ gem install pg -v '1.2.3'
	ERROR:  While executing gem ... (Gem::FilePermissionError)
	    You don't have write permissions for the /var/lib/gems/2.7.0 directory.
	gr00t@Gr00t:~/Desktop/ruby_rails$ sudo gem install pg -v '1.2.3'
	Building native extensions. This could take a while...
	ERROR:  Error installing pg:
		ERROR: Failed to build gem native extension.

	    current directory: /var/lib/gems/2.7.0/gems/pg-1.2.3/ext
	/usr/bin/ruby2.7 -I /usr/lib/ruby/vendor_ruby -r ./siteconf20210218-50341-akfe0s.rb extconf.rb
	checking for pg_config... yes
	Using config values from /usr/bin/pg_config
	checking for libpq-fe.h... no
	Can't find the 'libpq-fe.h header
	*** extconf.rb failed ***
	Could not create Makefile due to some reason, probably lack of necessary
	libraries and/or headers.  Check the mkmf.log file for more details.  You may
	need configuration options.

	Provided configuration options:
		--with-opt-dir
		--without-opt-dir
		--with-opt-include
		--without-opt-include=${opt-dir}/include
		--with-opt-lib
		--without-opt-lib=${opt-dir}/lib
		--with-make-prog
		--without-make-prog
		--srcdir=.
		--curdir
		--ruby=/usr/bin/$(RUBY_BASE_NAME)2.7
		--with-pg
		--without-pg
		--enable-windows-cross
		--disable-windows-cross
		--with-pg-config
		--without-pg-config
		--with-pg_config
		--without-pg_config
		--with-pg-dir
		--without-pg-dir
		--with-pg-include
		--without-pg-include=${pg-dir}/include
		--with-pg-lib
		--without-pg-lib=${pg-dir}/lib

	To see why this extension failed to compile, please check the mkmf.log which can be found here:

	  /var/lib/gems/2.7.0/extensions/x86_64-linux/2.7.0/pg-1.2.3/mkmf.log

	extconf failed, exit code 1

	Gem files will remain installed in /var/lib/gems/2.7.0/gems/pg-1.2.3 for inspection.
	Results logged to /var/lib/gems/2.7.0/extensions/x86_64-linux/2.7.0/pg-1.2.3/gem_make.out

	Solution:
	You need to install libpq-dev first

	gr00t@Gr00t:~/Desktop/ruby_rails$ sudo apt install libpq-dev 

	gr00t@Gr00t:~/Desktop/ruby_rails$ sudo gem install pg
	Building native extensions. This could take a while...
	Successfully installed pg-1.2.3
	Parsing documentation for pg-1.2.3
	Installing ri documentation for pg-1.2.3
	Done installing documentation for pg after 1 seconds
	1 gem installed

9. Starting the rails server in the current project directory: 
	
	Database(Postgresql) connection Error:

	gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ bin/rails server
	=> Booting Puma
	=> Rails 6.1.3 application starting in development 
	=> Run `bin/rails server --help` for more startup options
	Puma starting in single mode...
	* Puma version: 5.2.1 (ruby 2.7.2-p137) ("Fettisdagsbulle")
	*  Min threads: 5
	*  Max threads: 5
	*  Environment: development
	*          PID: 51127
	* Listening on http://127.0.0.1:3000
	* Listening on http://[::1]:3000
	Use Ctrl-C to stop
	Started GET "/" for ::1 at 2021-02-18 10:38:41 +0530
	  
	ActiveRecord::ConnectionNotEstablished (could not connect to server: No such file or directory
		Is the server running locally and accepting
		connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?
	):

	Solution:
	Under the default section, find the line that says “pool: 5” and add the following lines under it. It should look something like this (replace the highlighted 		parts with your PostgreSQL user and password):
	config/database.yml excerpt

	host: localhost
	username: pguser
	password: pguser_password
	
	Creating User in PSQL refer to thead:
	https://stackoverflow.com/questions/2172569/how-do-i-login-and-authenticate-to-postgresql-after-a-fresh-install

	There are two methods you can use. Both require creating a user and a database.

	By default psql connects to the database with the same name as the user. So there is a convention to make that the "user's database". And there is no reason	 	to break that convention if your user only needs one database. We'll be using mydatabase as the example database name.

    Using createuser and createdb, we can be explicit about the database name,

    $ sudo -u postgres createuser -s $USER
    $ createdb mydatabase
    $ psql -d mydatabase

    You should probably be omitting that entirely and letting all the commands default to the user's name instead.

    $ sudo -u postgres createuser -s $USER
    $ createdb
    $ psql

10. Creating a route and controller in config/routes.rb

	Rails.application.routes.draw do
	  # For details on the DSL available within this file, see https://guides.rubyonrails.org/routing.html
	  get "/employee", to: "employee#index"
	end

	and run a command for creating the controller using terminal in the current directory

	gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ bin/rails generate controller Employee index --skip-routes

11. Creating database for the application

	gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rake db:create 
	Database 'company_xyz_development' already exists
	Created database 'company_xyz_test'

12. Creating a model (Model names are singular)
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ bin/rails generate model Employee 
Running via Spring preloader in process 54510
      invoke  active_record
      create    db/migrate/20210218071236_create_employees.rb
      create    app/models/employee.rb
      invoke    test_unit
      create      test/models/employee_test.rb
      create      test/fixtures/employees.yml

13. Migration for the construction and altering the structure of database

gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ bin/rails db:migrate
== 20210218071236 CreateEmployees: migrating ==================================
-- create_table(:employees)
   -> 0.1086s
== 20210218071236 CreateEmployees: migrated (0.1088s) 

14. Rollback and destory command for undoing things

gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ bin/rails db:migrate
== 20210218071236 CreateEmployees: migrating ==================================
-- create_table(:employees)
   -> 0.1465s
== 20210218071236 CreateEmployees: migrated (0.1467s) =========================

gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rake db:rollback 
== 20210218071236 CreateEmployees: reverting ==================================
-- drop_table(:employees)
   -> 0.0027s
== 20210218071236 CreateEmployees: reverted (0.0042s) =========================

gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails destroy model Employee
Running via Spring preloader in process 55652
      invoke  active_record
      remove    db/migrate/20210218071236_create_employees.rb
      remove    app/models/employee.rb
      invoke    test_unit
      remove      test/models/employee_test.rb
      remove      test/fixtures/employees.yml
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ bin/rails generate model employee
Running via Spring preloader in process 55697
      invoke  active_record
      create    db/migrate/20210218075541_create_employees.rb
      create    app/models/employee.rb
      invoke    test_unit
      create      test/models/employee_test.rb
      create      test/fixtures/employees.yml

15. Using a Model to Interact with the Database

gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ bin/rails console
Running via Spring preloader in process 56213
Loading development environment (Rails 6.1.3)
irb(main):001:0> employee = Employee.new(name: "Sushi",gender: "M",dob:"2002-02-22",address:"Delhi East")
=> #<Employee id: nil, name: "Sushi", gender: "M", dob: "2002-02-22", address: "Delhi East", created_at: nil, updated_at: nil>
irb(main):002:0> employee.save
  TRANSACTION (0.5ms)  BEGIN
  Employee Create (2.0ms)  INSERT INTO "employees" ("name", "gender", "dob", "address", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"  [["name", "Sushi"], ["gender", "M"], ["dob", "2002-02-22"], ["address", "Delhi East"], ["created_at", "2021-02-18 08:13:50.083473"], ["updated_at", "2021-02-18 08:13:50.083473"]]
  TRANSACTION (24.3ms)  COMMIT
=> true
irb(main):003:0> 

16. Controller instance variables can be accessed by the view. That means we can reference @articles in app/views/articles/index.html.erb

17. HTML and ERB. ERB is a templating system that evaluates Ruby code embedded in a document. Here, we can see two types of ERB tags: <% %> and <%= %>. The <% %> tag means "evaluate the enclosed Ruby code." The <%= %> tag means "evaluate the enclosed Ruby code, and output the value it returns.

18. Behind the Scences

    The browser makes a request: GET http://localhost:3000.
    Our Rails application receives this request.
    The Rails router maps the root route to the index action of ArticlesController.
    The index action uses the Article model to fetch all articles in the database.
    Rails automatically renders the app/views/articles/index.html.erb view.
    The ERB code in the view is evaluated to output HTML.
    The server sends a response containing the HTML back to the browser.

19. droping database

gr00t@Gr00t:~/Desktop/workspace/doctor_management_system$ bin/rails db:drop
Dropped database 'doctor_management_system'
Dropped database 'doctor_management_system_test'

20. creating new migrations for altering the structure of database

gr00t@Gr00t:~/Desktop/workspace/doctor_management_system$ bin/rails generate migration add_qualification_to_doctors
Running via Spring preloader in process 61869
      invoke  active_record
      create    db/migrate/20210218115746_add_qualification_to_doctors.rb

21. Class.new and Class.create

irb(main):008:0> doctor.name = 'vinay'
=> "vinay"
irb(main):009:0> doctor.name.class
=> String
irb(main):010:0> doctor.gender = 'male'
=> "male"
irb(main):011:0> doctor
=> #<Doctor id: nil, name: "vinay", dob: nil, gender: "male", phoneno: nil, address: nil, email: nil, designation: nil, department: nil, doj: nil, created_at: nil, updated_at: nil, qualification: nil>
irb(main):012:0> doctor.save
  TRANSACTION (0.6ms)  BEGIN
  Doctor Create (1.7ms)  INSERT INTO "doctors" ("name", "gender", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["name", "vinay"], ["gender", "male"], ["created_at", "2021-02-18 12:05:49.343740"], ["updated_at", "2021-02-18 12:05:49.343740"]]
  TRANSACTION (88.6ms)  COMMIT
=> true
irb(main):013:0> doctor = Doctor.create(name: "test", gender: "male")
  TRANSACTION (0.5ms)  BEGIN
  Doctor Create (0.9ms)  INSERT INTO "doctors" ("name", "gender", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["name", "test"], ["gender", "male"], ["created_at", "2021-02-18 12:07:26.014847"], ["updated_at", "2021-02-18 12:07:26.014847"]]
  TRANSACTION (17.2ms)  COMMIT
=> #<Doctor id: 2, name: "test", dob: nil, gender: "male", phoneno: nil, address: nil, email: nil, designation: nil, department: nil, doj: nil, created_at: "2021...
irb(main):014:0> doctor = Doctor.new(name: "test", gender: "male").save
  TRANSACTION (0.6ms)  BEGIN
  Doctor Create (1.0ms)  INSERT INTO "doctors" ("name", "gender", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["name", "test"], ["gender", "male"], ["created_at", "2021-02-18 12:08:25.042113"], ["updated_at", "2021-02-18 12:08:25.042113"]]
  TRANSACTION (82.6ms)  COMMIT
=> true

22. Active Record migration(while generating a new migration) should have a name in CamelCase and for example if :
	If the migration name is of the form "AddColumnToTable" or "RemoveColumnFromTable" and is followed by a list of column names and types then a migration containing the appropriate add_column and remove_column statements will be created.


23. Migration Convention over Configuration 

			---Bad Practice ---
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails generate migration ChangeGenderTypeToStringAgain
Running via Spring preloader in process 67637
      invoke  active_record
      create    db/migrate/20210219043519_change_gender_type_to_string_again.rb
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails db:migrate
== 20210219043519 ChangeGenderTypeToStringAgain: migrating ====================
-- change_table(:employees)
   -> 0.0023s
== 20210219043519 ChangeGenderTypeToStringAgain: migrated (0.0024s) ===========
			---Bad Practice ---

	---Convention you should use---
24. Adding Column To Table
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails generate migration AddDepartmentToEmployees 
Running via Spring preloader in process 67861
      invoke  active_record
      create    db/migrate/20210219044350_add_department_to_employees.rb
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails db:migrate
== 20210219044350 AddDepartmentToEmployees: migrating =========================
-- add_column(:employees, :department, :string)
   -> 0.0179s
-- add_index(:employees, :department)
   -> 0.0490s
== 20210219044350 AddDepartmentToEmployees: migrated (0.0671s) ================

25. Removing Column from Table
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails generate migration RemoveDepartmentFromEmployees department:string
Running via Spring preloader in process 68036
      invoke  active_record
      create    db/migrate/20210219044923_remove_department_from_employees.rb
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails db:migrate
== 20210219044923 RemoveDepartmentFromEmployees: migrating ====================
-- remove_column(:employees, :department, :string)
   -> 0.0029s
== 20210219044923 RemoveDepartmentFromEmployees: migrated (0.0030s) ===========

26. Adding Details to Table(multiple columns together in a single migration)
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails generate migration AddDetailsToEmployees department:string doj:date
Running via Spring preloader in process 68116
      invoke  active_record
      create    db/migrate/20210219045247_add_details_to_employees.rb
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails db:migrate
== 20210219045247 AddDetailsToEmployees: migrating ============================
-- add_column(:employees, :department, :string)
   -> 0.0025s
-- add_column(:employees, :doj, :date)
   -> 0.0012s
== 20210219045247 AddDetailsToEmployees: migrated (0.0038s) ===================

27. Creating a new Table
"Don't specify constraints here on the command-line"
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails generate migration CreateDepartment name:string,not_null technology:string,not_null
Running via Spring preloader in process 68246
      invoke  active_record
      create    db/migrate/20210219045953_create_department.rb
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails db:migrate
rails aborted!
SyntaxError: /home/gr00t/Desktop/ruby_rails/company_xyz/db/migrate/20210219045953_create_department.rb:4: syntax error, unexpected symbol literal, expecting `do' or '{' or '('
      t.string,not_null :name
                        ^
/home/gr00t/Desktop/ruby_rails/company_xyz/db/migrate/20210219045953_create_department.rb:5: syntax error, unexpected symbol literal, expecting `do' or '{' or '('
      t.string,not_null :technology
                        ^
/home/gr00t/Desktop/ruby_rails/company_xyz/bin/rails:5:in `<top (required)>'
/home/gr00t/Desktop/ruby_rails/company_xyz/bin/spring:10:in `block in <top (required)>'
/home/gr00t/Desktop/ruby_rails/company_xyz/bin/spring:7:in `tap'
/home/gr00t/Desktop/ruby_rails/company_xyz/bin/spring:7:in `<top (required)>'
Tasks: TOP => db:migrate
(See full trace by running task with --trace)
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails db:migrate
== 20210219045953 CreateDepartment: migrating =================================
-- create_table(:departments)
   -> 0.1968s
== 20210219045953 CreateDepartment: migrated (0.1970s) ========================

28. Adding Foreign key to Table 
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails generate migration AddEmployeeRefToDepartments employee:references
Running via Spring preloader in process 70006
      invoke  active_record
      create    db/migrate/20210219062238_add_employee_ref_to_departments.rb
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails db:migrate
== 20210219062238 AddEmployeeRefToDepartments: migrating ======================
-- add_reference(:departments, :employee, {:null=>false, :foreign_key=>true})
   -> 0.1553s
== 20210219062238 AddEmployeeRefToDepartments: migrated (0.1554s) =============

29. Create new table joining two tables

gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails generate migration CreateJoinTableEmployeeDepartment employee department
Running via Spring preloader in process 70129
      invoke  active_record
      create    db/migrate/20210219062950_create_join_table_employee_department.rb
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails generate migration AddDetailsToDepartments 'floor:integer' 'head:string'
Running via Spring preloader in process 70308
      invoke  active_record
      create    db/migrate/20210219063859_add_details_to_departments.rb
gr00t@Gr00t:~/Desktop/ruby_rails/company_xyz$ rails db:migrate
== 20210219062950 CreateJoinTableEmployeeDepartment: migrating ================
-- create_join_table(:employees, :departments)
   -> 0.0031s
== 20210219062950 CreateJoinTableEmployeeDepartment: migrated (0.0031s) =======

== 20210219063859 AddDetailsToDepartments: migrating ==========================
-- add_column(:departments, :floor, :integer)
   -> 0.0030s
-- add_column(:departments, :head, :string)
   -> 0.0014s
== 20210219063859 AddDetailsToDepartments: migrated (0.0045s) =================

30. Created new controller in doctor management app and added two view files
	FORM USING HTML
	FORM USING RAILS
31. Created new actions in Home controller for Creating new record
	employee#new
	employee#create

32. Use of Strong parameters to capture the form data and selecting only the required fields necessary to add to our database.

33. Routing : Resources routing just providing the resource name and it gives us a combination of all crud opertation related actions to that resource with the controller name. Single call to resouces defines all the routes probably CRUD operations for that resource.

34. Path and url helpers expose number of helpers to controllers
	for ex. employees_path() return route /employees
		new_employee_path() return route /employees/new
		edit_employee_path(:id) return route /employees/edit

35. Routing with rails

Singular Resources

Controller Namespace and Routing

Nested Resources : try to keep the nesting just to 1 level

Shallow nesting : a better option preventing the redundancy of routes

Routing Concerns : Common routes under resources

Creating path and url objects

Member routes and collection routes

Routes:
link_to "",magazine_ad_path(@magazine, @ad)

Non-Resourceful routing

Bound Parameters

Dynamic and static segments

Defining Defaults
You can't override defaults except dynamic segment

Match method to get multiple http verbs 

Constraints 
Request based constraints
Advanced constraints using blocks and lambda

Route Globing matching particular part of the route

Redirect to some other page

Breaking up a large route file into multiple ones by using DRAW MACRO

FORM_HELPER

Csrf token

fields_for

form_with(model: @article)
while using sinle table inhertance you can't rely on base class objects you have to define :url and :scope for the object of derived class to access in the form 

Name_spaces 
